Complete lab setup

-----
npm commands
-----
npm init
npm update
npm install

-----
mongodb - used for nosql and csrf exercises
-----
## sudo apt-get update
## sudo apt-get install -y mongodb
## sudo npm install mongodb@3.1
sudo npm install mongodb

-----
MySQL
-----
# start MySQL. Will create an empty database on first start
$ sudo systemctl start mysql

# run the MySQL interactive shell from the directory where createtable.sql file is located
$ sudo mysql
mysql> create database c9;
mysql> use c9
mysql> source createtable.sql
mysql> show tables;

mysql> create user c9user;
mysql> grant all privileges on *.* to 'c9user'@'%';
mysql> flush privileges;
mysql> quit


# install easy-session module
npm install easy-session



-------
MySQL2 - https://www.devopshint.com/install-mysql-5-7-on-amazon-linux-2/
https://teratail.com/questions/322066
-------
sudo yum update
sudo wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
sudo yum localinstall mysql57-community-release-el7-11.noarch.rpm
sudo yum remove mariadb-config
sudo yum install mysql-community-server
sudo systemctl start mysqld.service
sudo systemctl status mysqld.service
sudo grep 'temporary password' /var/log/mysqld.log
mysql_secure_installation
mysql -u root -p



-----
Todo App Commands
-----
0. Setup data directory
    In a terminal, type below
    sudo mkdir -p /data/db
    
1. Start mongodb
    In a new terminal, type below:
    ./mongod
    
    if you get an error, check existing process by
    sudo lsof -iTCP -sTCP:LISTEN -n -P
    
2. Start Todo App
    go to exercise_files_sol/chapter2/node
    select server.js
    run server.js
    
3. Test Todo App
    open https://(your path here):8081/api

CSRF External Test
1. Start External Todo Interface
    go to exercise_files_sol/chapter2/external
    select external_node.html
    modify the submit URL to https://(your partner's Todo App url):8081/api
    run external_node.html
2. Test CSRF
    





Some useful commands

-----
Mongodb:
sudo apt-get update
sudo apt-get install -y mongodb
$ mkdir data
$ echo 'mongod --bind_ip=$IP --dbpath=data --nojournal --rest "$@"' > mongod
$ chmod a+x mongod
$ mongod
$ mongod --shutdown

Mongodb commands:
mongo
show dbs
use todos
show collections
db.todos.find()

------
MySQL:
# start MySQL. Will create an empty database on first start
$ mysql-ctl start

# stop MySQL
$ mysql-ctl stop

# run the MySQL interactive shell
$ mysql-ctl cli
mysql> use c9
mysql> source createtable.sql
mysql> show tables;

ref: https://community.c9.io/t/setting-up-mysql/1718

-------
Process:
fuser 8081/tcp
fuser -k 8081/tcp
ps aux

-----
csurf library reference
https://github.com/expressjs/csurf
http://tornado.readthedocs.io/en/latest/guide/security.html#cross-site-request-forgery-protection

-----
owasp esapi library install
npm install node-esapi

-----
github commands
git add .
git commit -m "First commit"
git push


